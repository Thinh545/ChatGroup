{"version":3,"sources":["components/NotFoundPage.js","components/LoginPage.js","actions/auth.js","components/User.js","components/Users.js","actions/users.js","components/Message.js","actions/messages.js","components/Messages.js","components/Home.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/auth.js","reducers/users.js","reducers/messages.js","firebase/firebase.js","App.js","serviceWorker.js","index.js"],"names":["NotFoundPage","react_default","a","createElement","Link","to","LoginPage","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","className","onClick","props","startLogin","React","Component","connect","dispatch","getState","getFirebase","firebase","login","provider","type","then","result","user","database","ref","concat","uid","set","User","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","userOnClick","handleOnClick","_this2","active","src","avatarUrl","alt","displayName","lastTime","Users","createUserComponent","listUser","users","forEach","element","push","components_User","startUsersList","id","state","auth","on","snapshot","list","childSnapshot","toJSON","usersList","Message","mine","mess","photo","text","userChange","startListening","url","limitToLast","msgSnapshot","endListening","off","Messages","onSubmit","e","preventDefault","message","target","trim","sendMessage","reset","submit","diabled","scrollToBottom","messagesEnd","scrollIntoView","behavior","listMess","components_Message","aria-hidden","style","float","clear","el","autoComplete","name","placeholder","messages","authid","Home","startUserChange","htmlFor","components_Users","components_Messages","once","val","pop","undefined","startLogout","dateformat","Date","signOut","_ref","isAuthenticated","component","rest","objectWithoutProperties","Route","assign","components_Header","Redirect","history","createHistory","AppRouter","Router","Switch","routers_PublicRoute","path","exact","routers_PrivateRoute","reducers_auth","action","defaultState","tmp","toConsumableArray","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","configDB","userProfile","firebaseStateName","store","initializeApp","compose","reactReduxFirebase","applyMiddleware","thunk","withExtraArgument","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","authReducer","usersReducer","messagesReducer","configureStore","window","__INITIAL_STATE__","onAuthStateChanged","email","photoURL","location","pathname","App","es","routers_AppRouter","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31a5978d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { startLogin } from '../actions/auth';\n\nexport class LoginPage extends React.Component {\n  render() {\n    return (\n      <div className=\"box-layout\">\n        <div className=\"box-layout__box\">\n          <h1 className=\"box-layout__title\">Chat Group 545</h1>\n          <p>WELLCOME</p>\n          <button className=\"login-button\" onClick={this.props.startLogin}>Login with Google</button>\n        </div>\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogin: () => dispatch(startLogin())\n});\n\nexport default connect(null, mapDispatchToProps)(LoginPage);","import dateformat from 'dateformat'\n\nexport const login = (uid, name, photo) => ({\n  type: 'LOGIN',\n  uid,\n  name,\n  photo\n});\n\nexport const startLogin = () =>\n  (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    return firebase.login({ provider: 'google', type: 'popup' }).then((result) => {\n      // The signed-in user info.\n      const user = result.user;\n      firebase.database().ref(`users/${user.uid}/uid`).set(user.uid)\n      firebase.database().ref(`users/${user.uid}/active`).set(true)\n    });\n  };\n\nexport const logout = () => ({\n  type: 'LOGOUT'\n});\n\nexport const startLogout = () =>\n  (dispatch, getState, getFirebase) => {\n    const auth = getState().auth;\n    const database = getFirebase().database();\n\n    database.ref(`users/${auth.uid}/active`).set(false)\n    database.ref(`users/${auth.uid}/lastTime`).set(dateformat(Date(), \"yyyy/dd/mm HH:MM\"))\n    return getFirebase().auth().signOut();\n  };\n","import React from 'react';\n\nexport class User extends React.Component {\n\n    userOnClick = () => {\n        this.props.handleOnClick(this.props.user);\n    }\n\n    render() {\n        return (\n            <li className=\"contact\" onClick={() => this.userOnClick()}>\n                <div className=\"wrap\">\n                    <span className={this.props.user.active ? \"contact-status online\" : \"contact-status\"}></span>\n                    <img src={this.props.user.avatarUrl} alt=\"\" />\n                    <div className=\"meta\">\n                        <p className=\"name\">{this.props.user.displayName}</p>\n                        <p className=\"preview\">\n                            {\n                                this.props.user.active ? \"online\" : this.props.user.lastTime\n                            }\n                        </p>\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default User","import React from 'react';\nimport User from './User'\nimport { connect } from 'react-redux';\nimport { startUsersList } from '../actions/users'\n\nexport class Users extends React.Component {\n    componentWillMount() {\n        this.props.startUsersList();\n    }\n\n    createUserComponent = () => {\n        let listUser = [];\n        this.props.users.forEach(element => {\n            listUser.push(\n                <User key={element.uid} user={element} handleOnClick={this.props.handleOnClick} />\n            )\n        });\n\n        return listUser;\n    }\n\n    render() {\n        return (\n            <div id=\"contacts\">\n                <ul>\n                    {this.createUserComponent()}\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    users: state.users,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    startUsersList: () => dispatch(startUsersList())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","export const usersList = (list) => ({\n    type: 'USERS_LIST',\n    users: list,\n})\n\nexport const startUsersList = () => {\n    return (dispatch, getState, getFirebase) => {\n        const firebase = getFirebase();\n        let list = [];\n        return firebase.database().ref('users').on(\"value\", function (snapshot) {\n            let list = [];\n            snapshot.forEach((childSnapshot) => {\n                list.push(childSnapshot.toJSON())\n            });\n            return dispatch(usersList(list));\n        })\n    }\n}","import React from 'react'\n\nexport class Message extends React.Component {\n    render() {\n        const mine = (this.props.mess.uid === this.props.auth.uid);\n        return (\n            <li className={mine ? \"sent\" : \"replies\"}>\n                <img src={mine ? this.props.auth.photo : this.props.user.photo} alt=\"\" />\n                <p>{this.props.mess.text}</p>\n            </li>\n        )\n    }\n}\n\nexport default Message","import moment from 'moment'\n\nexport const messageChange = (mess) => ({\n    type: 'MESSAGES_CHANGE',\n    mess: mess,\n})\n\nexport const userChange = (user, list) => ({\n    type: 'USER_CHANGE',\n    user: user,\n    list: list,\n})\n\nexport const sendMessage = (uid, text) => {\n    return (dispatch, getState, getFirebase) => {\n        const auth = getState().auth\n        if (auth) {\n            const authid = auth.uid;\n            const message = {\n                uid: authid,\n                text,\n            }\n\n            let url;\n            if (authid > uid)\n                url = authid + uid;\n            else\n                url = uid + authid;\n\n            return getFirebase().database().ref(`messages/${url}`).push(message);\n        }\n    }\n}\n\nexport const startUserChange = (user) => {\n    return (dispatch, getState, getFirebase) => {\n        if (getState().messages.user) {\n            dispatch(endListening(getState().messages.user.uid))\n        }\n\n        const firebase = getFirebase();\n        const auth = getState().auth;\n        let url;\n        if (auth.uid > user.uid)\n            url = auth.uid + user.uid;\n        else\n            url = user.uid + auth.uid;\n\n        return firebase.database().ref(`messages/${url}`).once('value', (msgSnapshot) => {\n            if (msgSnapshot.val()) {\n                let mess = [];\n                msgSnapshot.forEach((childSnapshot) => {\n                    mess.push(childSnapshot.toJSON());\n                })\n\n                mess.pop();\n                dispatch(userChange(user, mess));\n            } else {\n                dispatch(userChange(user, []))\n            }\n\n            dispatch(startListening(user.uid));\n        })\n    }\n}\n\nexport const startListening = (uid) => {\n    return (dispatch, getState, getFirebase) => {\n        const auth = getState().auth;\n        const firebase = getFirebase();\n\n        let url;\n        if (auth.uid > uid)\n            url = auth.uid + uid;\n        else\n            url = uid + auth.uid;\n\n        let messRef = firebase.database().ref(`messages/${url}`);\n\n        messRef.limitToLast(1).on('child_added', function (msgSnapshot) {\n            dispatch(messageChange(msgSnapshot.toJSON()))\n        })\n    }\n}\n\nexport const endListening = (uid) => {\n    return (dispatch, getState, getFirebase) => {\n        const auth = getState().auth;\n        const firebase = getFirebase();\n\n        let url;\n        if (auth.uid > uid)\n            url = auth.uid + uid;\n        else\n            url = uid + auth.uid;\n\n        firebase.database().ref(`messages/${url}`).off();\n    }\n}","import React from 'react';\nimport Message from './Message'\nimport { connect } from 'react-redux';\nimport { sendMessage, startListening } from '../actions/messages'\n\nexport class Messages extends React.Component {\n    onSubmit = (e) => {\n        e.preventDefault();\n        const message = e.target.message.value;\n\n        if (!message.trim()) {\n            e.target.submit.diabled = true;\n            return;\n        }\n\n        this.props.sendMessage(this.props.user.uid, message);\n        e.target.reset();\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"auto\" });\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    render() {\n        let listMess = [];\n        this.props.mess.list.forEach(element => {\n            listMess.push(\n                <Message mess={element} auth={this.props.auth} user={this.props.user} />\n            )\n        });\n\n        return (\n            <div className=\"content\">\n                <div className=\"contact-profile\">\n                    <img src={this.props.user ? this.props.user.avatarUrl : \"\"} alt=\"\" />\n                    <p>{this.props.user ? this.props.user.displayName : \"\"}</p>\n                    <div className=\"social-media\">\n                        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                    </div>\n                </div>\n\n                <div className=\"messages\">\n                    <ul>\n                        {listMess}\n                    </ul>\n\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n\n                <div className=\"message-input\">\n                    <div className=\"wrap\">\n                        <form onSubmit={this.onSubmit} autoComplete=\"off\">\n                            <input type=\"text\" name=\"message\" placeholder=\"Write your message...\" />\n                            <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\n                            <button name=\"submit\" className=\"submit\">\n                                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    user: state.messages.user,\n    mess: state.messages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    sendMessage: (uid, text) => dispatch(sendMessage(uid, text)),\n    startListening: (uid) => dispatch(startListening(uid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","import React from 'react';\nimport Users from './Users'\nimport Messages from './Messages'\nimport { connect } from 'react-redux';\nimport { startUserChange } from '../actions/messages'\n\nexport class Home extends React.Component {\n    handleOnClick = (user) => {\n        this.props.startUserChange(user);\n    }\n\n    render() {\n        const auth = this.props.auth;\n        return (\n            <div id=\"frame\">\n                <div id=\"sidepanel\">\n                    <div id=\"profile\">\n                        <div className=\"wrap\">\n                            <img id=\"profile-img\" src={auth.avatarUrl} className=\"online\" alt=\"\" />\n                            <p>{auth.displayName}</p>\n                            <i className=\"fa fa-chevron-down expand-button\" aria-hidden=\"true\"></i>\n                            <div id=\"status-options\">\n                                <ul>\n                                    <li id=\"status-online\" className=\"active\"><span className=\"status-circle\"></span>\n                                        <p>Online</p>\n                                    </li>\n                                    <li id=\"status-away\"><span className=\"status-circle\"></span>\n                                        <p>Away</p>\n                                    </li>\n                                    <li id=\"status-busy\"><span className=\"status-circle\"></span>\n                                        <p>Busy</p>\n                                    </li>\n                                    <li id=\"status-offline\"><span className=\"status-circle\"></span>\n                                        <p>Offline</p>\n                                    </li>\n                                </ul>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div id=\"search\">\n                        <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\n                        <input type=\"text\" placeholder=\"Search contacts...\" />\n                    </div>\n\n                    <Users handleOnClick={this.handleOnClick} />\n                </div>\n\n                <Messages />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    user: state.messages.user\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    startUserChange: (uid) => dispatch(startUserChange(uid)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../actions/auth';\n\nexport const Header = ({ startLogout }) => (\n  <header className=\"header\">\n    <div className=\"content-container\">\n      <div className=\"header__content\">\n        <Link className=\"header__title\" to=\"/join\">\n          <h1>Chat Group 545</h1>\n        </Link>\n        <button className=\"button button--link\" onClick={startLogout}>Logout</button>\n      </div>\n    </div>\n  </header>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogout: () => dispatch(startLogout())\n});\n\nexport default connect(undefined, mapDispatchToProps)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <div>\n          <Header />\n          <div>\n            <Component {...props} />\n          </div>\n        </div>\n      ) : (\n          <Redirect to=\"/\" />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <Redirect to=\"/home\" />\n      ) : (\n          <Component {...props} />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { Router, Route, Switch, Link, NavLink } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport NotFoundPage from '../components/NotFoundPage';\nimport LoginPage from '../components/LoginPage';\nimport Home from '../components/Home'\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const history = createHistory();\n\nconst AppRouter = () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n        <PrivateRoute path=\"/home\" component={Home} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        uid: action.uid,\n        displayName: action.name,\n        avatarUrl: action.photo\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","const defaultState = [];\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case 'USERS_LIST':\n            let tmp = [];\n            if (action.users)\n                tmp = action.users;\n            return tmp;\n        default:\n            return state;\n    }\n}","import moment from 'moment'\nimport { stat } from 'fs';\n\nconst defaultState = {\n    user: {\n        uid: null,\n        displayName: \"Chat With Ghost\",\n        avatarUrl: \"http://icons.iconarchive.com/icons/google/noto-emoji-smileys/512/10100-ghost-icon.png\",\n    },\n    list: [],\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case 'MESSAGES_CHANGE':\n            return {\n                user: state.user,\n                list: [...state.list, action.mess]\n            }\n\n        case 'USER_CHANGE':\n            if (action.list)\n                return ({\n                    user: action.user,\n                    list: action.list,\n                })\n            else\n                return {\n                    user: action.user,\n                    list: []\n                }\n\n        default:\n            return state;\n    }\n}","import { compose, combineReducers, applyMiddleware, createStore } from 'redux'\nimport { reactReduxFirebase, getFirebase, firebaseReducer } from 'react-redux-firebase'\nimport firebase from 'firebase'\nimport thunk from 'redux-thunk';\nimport authReducer from '../reducers/auth';\nimport usersReducer from '../reducers/users'\nimport messagesReducer from '../reducers/messages'\n\nvar config = {\n  apiKey: \"AIzaSyA9bkol6af0Wz-ozhS78n2TOs3LNya8xGg\",\n  authDomain: \"chat-group-18857.firebaseapp.com\",\n  databaseURL: \"https://chat-group-18857.firebaseio.com\",\n  projectId: \"chat-group-18857\",\n  storageBucket: \"chat-group-18857.appspot.com\",\n  messagingSenderId: \"660645655047\"\n};\n\nconst configDB = {\n  userProfile: 'users', // firebase root where user profiles are stored\n  firebaseStateName: 'firebase' // should match the reducer name ('firebase' is default)\n}\n\nexport function configureStore(initialState = {}) {\n  firebase.initializeApp(config)\n\n  const createStoreWithFirebase =\n    compose(reactReduxFirebase(firebase, configDB),\n      applyMiddleware(thunk.withExtraArgument(getFirebase))\n    )(createStore)\n\n  const store = createStoreWithFirebase(\n    combineReducers({\n      firebase: firebaseReducer,\n      auth: authReducer,\n      users: usersReducer,\n      messages: messagesReducer,\n    })\n  )\n\n  return store;\n}\n\nexport { firebase, configureStore as default };","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport AppRouter, { history } from './routers/AppRouter';\nimport { login, logout } from './actions/auth';\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { firebase, configureStore } from './firebase/firebase';\n\n\nconst initialState = window.__INITIAL_STATE__ // set initial state here\nconst store = configureStore(initialState);\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    const name = user.displayName ? user.displayName : user.email;\n    store.dispatch(login(user.uid, name, user.photoURL));\n    if (history.location.pathname === '/') {\n      history.push('/home');\n    }\n  } else {\n    store.dispatch(logout());\n    history.push('/');\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}