{"version":3,"sources":["components/NotFoundPage.js","components/LoginPage.js","actions/auth.js","components/User.js","components/Users.js","actions/users.js","components/Message.js","actions/messages.js","components/Messages.js","components/Home.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/auth.js","reducers/users.js","reducers/messages.js","firebase/firebase.js","App.js","serviceWorker.js","index.js"],"names":["NotFoundPage","react_default","a","createElement","Link","to","LoginPage","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","className","onClick","props","startLogin","React","Component","connect","dispatch","getState","getFirebase","firebase","login","provider","type","then","result","user","database","ref","concat","uid","set","User","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","userOnClick","handleOnClick","_this2","active","src","avatarUrl","alt","displayName","lastTime","Users","state","filter","createUserComponent","listUser","users","forEach","element","toLowerCase","indexOf","push","components_User","handleSearchChange","e","setState","target","startUsersList","id","htmlFor","aria-hidden","placeholder","onChange","auth","on","snapshot","list","childSnapshot","toJSON","authStat","find","obj","sort","b","stat","astat","bstat","star","usersList","Message","mess","mine","listImg","parts","text","match","map","img","index","media","values","userChange","changeStar","startListening","url","limitToLast","msgSnapshot","endListening","off","getStar","once","val","Messages","onSubmit","preventDefault","message","trim","inputImg","console","log","submit","diabled","sendMessage","reset","preImg","handleChosen","event","files","reader","FileReader","onload","preImgs","readAsDataURL","tmp","scrollToBottom","messagesEnd","scrollIntoView","behavior","handleStarClick","onStarClick","handleImageClick","rm","getAttribute","tmpPre","splice","tmpIn","listMess","components_Message","listimg","data-key","width","height","style","float","clear","el","autoComplete","name","accept","messages","storageRef","storage","metadata","contentType","arrPromiseLink","now","Date","Promise","resolve","reject","child","getTime","put","getDownloadURL","downloadURL","all","res","toConsumableArray","status","Home","startUserChange","startOnline","components_Users","components_Messages","pop","update","onDisconnect","dateformat","undefined","startLogout","signOut","_ref","isAuthenticated","component","rest","objectWithoutProperties","Route","assign","components_Header","Redirect","history","createHistory","AppRouter","Router","Switch","routers_PublicRoute","path","exact","routers_PrivateRoute","reducers_auth","action","photo","defaultState","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","configDB","userProfile","firebaseStateName","store","initializeApp","compose","reactReduxFirebase","applyMiddleware","thunk","withExtraArgument","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","authReducer","usersReducer","messagesReducer","configureStore","window","__INITIAL_STATE__","onAuthStateChanged","email","photoURL","location","pathname","App","es","routers_AppRouter","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.778a5014.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { startLogin } from '../actions/auth';\n\nexport class LoginPage extends React.Component {\n  render() {\n    return (\n      <div className=\"box-layout\">\n        <div className=\"box-layout__box\">\n          <h1 className=\"box-layout__title\">Chat Group 545</h1>\n          <p>WELLCOME</p>\n          <button className=\"login-button\" onClick={this.props.startLogin}>Login with Google</button>\n        </div>\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogin: () => dispatch(startLogin())\n});\n\nexport default connect(null, mapDispatchToProps)(LoginPage);","import dateformat from 'dateformat'\n\nexport const login = (uid, name, photo) => ({\n  type: 'LOGIN',\n  uid,\n  name,\n  photo,\n\n});\n\nexport const startLogin = () =>\n  (dispatch, getState, getFirebase) => {\n    const firebase = getFirebase();\n    return firebase.login({ provider: 'google', type: 'popup' }).then((result) => {\n      // The signed-in user info.\n      const user = result.user;\n      firebase.database().ref(`users/${user.uid}/uid`).set(user.uid)\n    });\n  };\n\nexport const startOnline = () =>\n  (dispatch, getState, getFirebase) => {\n    getFirebase().database().ref(`users/${getState().auth.uid}`).update({ active: true })\n    getFirebase().database().ref(`users/${getState().auth.uid}`).onDisconnect().update({\n      active: false,\n      lastTime: dateformat(Date(), \"yyyy/dd/mm HH:MM\"),\n    })\n  }\n\nexport const logout = () => ({\n  type: 'LOGOUT'\n});\n\nexport const startLogout = () =>\n  (dispatch, getState, getFirebase) => {\n    const auth = getState().auth;\n    const database = getFirebase().database();\n\n    database.ref(`users/${auth.uid}`).update({\n      active: false,\n      lastTime: dateformat(Date(), \"yyyy/dd/mm HH:MM\"),\n    })\n    return getFirebase().auth().signOut();\n  };","import React from 'react';\n\nexport class User extends React.Component {\n\n    userOnClick = () => {\n        this.props.handleOnClick(this.props.user);\n    }\n\n    render() {\n        return (\n            <li className=\"contact\" onClick={() => this.userOnClick()}>\n                <div className=\"wrap\">\n                    <span className={this.props.user.active ? \"contact-status online\" : \"contact-status\"}></span>\n                    <img src={this.props.user.avatarUrl} alt=\"\" />\n                    <div className=\"meta\">\n                        <p className=\"name\">{this.props.user.displayName}</p>\n                        <p className=\"preview\">\n                            {\n                                this.props.user.active ? \"online\" : this.props.user.lastTime\n                            }\n                        </p>\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default User","import React from 'react';\nimport User from './User'\nimport { connect } from 'react-redux';\nimport { startUsersList } from '../actions/users'\n\nexport class Users extends React.Component {\n    state = ({\n        filter: \"\",\n    })\n\n    componentWillMount() {\n        this.props.startUsersList();\n    }\n\n    createUserComponent = () => {\n        let listUser = [];\n        this.props.users.forEach(element => {\n            if (this.state.filter === \"\" ||\n                element.displayName.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1) {\n                listUser.push(\n                    <User key={element.uid} user={element} handleOnClick={this.props.handleOnClick} />\n                )\n            }\n        });\n\n        return listUser;\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({\n            filter: e.target.value,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"search\">\n                    <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\n                    <input type=\"text\" placeholder=\"Search contacts...\" onChange={this.handleSearchChange} />\n                </div>\n                <div id=\"contacts\">\n                    <ul>\n                        {this.createUserComponent()}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    users: state.users,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    startUsersList: () => dispatch(startUsersList())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","export const usersList = (list) => ({\n    type: 'USERS_LIST',\n    users: list,\n})\n\nexport const startUsersList = () => {\n    return (dispatch, getState, getFirebase) => {\n        const firebase = getFirebase();\n        const auth = getState().auth;\n\n        return firebase.database().ref('users').on(\"value\", function (snapshot) {\n            let list = [];\n            snapshot.forEach((childSnapshot) => {\n                list.push(childSnapshot.toJSON())\n            });\n\n            const authStat = list.find(obj => obj.uid === auth.uid);\n            list = list.sort((b, a) => {\n                if (authStat && authStat.stat) {\n                    const astat = authStat.stat[`${a.uid}`]\n                    const bstat = authStat.stat[`${b.uid}`]\n\n                    if ((b.active !== true && a.active === true) ||\n                        (b.active === true && a.active !== true)) {\n                        return (b.active !== true) ? 1 : -1\n                    } else if (astat && bstat) {\n                        if (astat.lastTime && bstat.lastTime) {\n                            return ((astat.star === true ? 6 : 1) * (astat.lastTime) -\n                                (bstat.star === true ? 6 : 1) * (bstat.lastTime))\n                        }\n                        else if (!astat.lastTime && bstat.lastTime) {\n                            return -1\n                        }\n                        else if (astat.lastTime && !bstat.lastTime) {\n                            return 1\n                        }\n                        else {\n                            return (astat.star === true ? 6 : 1) - (bstat.star === true ? 6 : 1)\n                        }\n                    } else if (!astat || !bstat) {\n                        return !bstat ? 1 : -1\n                    } else {\n                        return 1\n                    }\n                } else {\n                    if ((b.active !== true && a.active === true) ||\n                        (b.active === true && a.active !== true)) {\n                        return (b.active !== true) ? 1 : -1\n                    }\n                }\n            })\n\n            return dispatch(usersList(list));\n        })\n    }\n}\n\nexport const onStarClick = (uid, status) => {\n    return (dispatch, getState, getFirebase) => {\n        const firebase = getFirebase();\n        const auth = getState().auth;\n        firebase.database().ref(`users/${auth.uid}/stat/${uid}/star`).set(status);\n    }\n}","import React from 'react'\n\nexport class Message extends React.Component {\n    render() {\n        const mine = (this.props.mess.uid === this.props.auth.uid);\n        let listImg = [];\n        let parts = this.props.mess.text.match(/(https?|ftp:)([^\\s]+)/g);\n        if (parts) {\n            parts.map((img, index) => {\n                listImg.push(\n                    <li className={mine ? \"sent\" : \"replies\"}>\n                        <img src={mine ? this.props.auth.avatarUrl : this.props.user.avatarUrl} alt=\"\" />\n                        <img className=\"imageMess\" key={index} src={img} />\n                    </li>\n                )\n            })\n        }\n\n        if (this.props.mess.media) {\n            Object.values(this.props.mess.media).map((img, index) => {\n                listImg.push(\n                    <li className={mine ? \"sent\" : \"replies\"}>\n                        <img src={mine ? this.props.auth.avatarUrl : this.props.user.avatarUrl} alt=\"\" />\n                        <img className=\"imageMess\" key={index} src={img} />\n                    </li>\n                )\n            })\n        }\n\n        let mess;\n        if (this.props.mess.text != \"\") {\n            mess = (\n                <li className={mine ? \"sent\" : \"replies\"}>\n                    <img src={mine ? this.props.auth.avatarUrl : this.props.user.avatarUrl} alt=\"\" />\n                    <p>\n                        {this.props.mess.text}\n                    </p>\n                </li>\n            )\n        }\n\n        return (\n            <div>\n                {mess}\n                {listImg}\n            </div>\n        )\n    }\n}\n\nexport default Message","export const messageChange = (mess) => ({\n    type: 'MESSAGES_CHANGE',\n    mess: mess,\n})\n\nexport const userChange = (user, list) => ({\n    type: 'USER_CHANGE',\n    user: user,\n    list: list,\n})\n\nexport const changeStar = (star) => ({\n    type: 'STAR_CHANGE',\n    star: star,\n})\n\nexport const sendMessage = (uid, text, img) => {\n    return (dispatch, getState, getFirebase) => {\n        const firebase = getFirebase();\n        const storageRef = firebase.storage().ref();\n        const auth = getState().auth\n\n        let message = {\n            uid: auth.uid,\n            text,\n            media: [],\n        }\n\n        if (auth) {\n            let url;\n            if (auth.uid > uid)\n                url = auth.uid + uid;\n            else\n                url = uid + auth.uid;\n\n            if (img.length > 0) {\n                let metadata = {\n                    contentType: 'image/jpeg'\n                };\n                let arrPromiseLink = img.map((img) => {\n                    let now = new Date()\n                    return (new Promise(function (resolve, reject) {\n                        storageRef.child(`images/${now.getTime()}${img.name}`).put(img, metadata)\n                            .then((snapshot) => {\n                                snapshot.ref.getDownloadURL().then((downloadURL) => {\n                                    resolve(downloadURL)\n                                });\n                            })\n                    })\n                    )\n                })\n                Promise.all(arrPromiseLink).then((res) => {\n                    res.forEach((downloadURL) => {\n                        message.media = [...message.media, downloadURL]\n                    })\n                    Promise.all(message.media).then((res) => {\n                        let ref = firebase.database().ref(`messages/${url}`).push(message)\n                    })\n                })\n            }\n            else {\n                firebase.database().ref(`messages/${url}`).push(message)\n            }\n        }\n\n        firebase.database().ref(`users/${auth.uid}/stat/${uid}/lastTime`).set(Date.now());\n    }\n}\n\nexport const startUserChange = (user) => {\n    return (dispatch, getState, getFirebase) => {\n        if (getState().messages.user) {\n            dispatch(endListening(getState().messages.user.uid))\n        }\n\n        const firebase = getFirebase();\n        const auth = getState().auth;\n        let url;\n        if (auth.uid > user.uid)\n            url = auth.uid + user.uid;\n        else\n            url = user.uid + auth.uid;\n\n        return firebase.database().ref(`messages/${url}`).once('value', (msgSnapshot) => {\n            if (msgSnapshot.val()) {\n                let mess = [];\n                msgSnapshot.forEach((childSnapshot) => {\n                    mess.push(childSnapshot.toJSON());\n                })\n\n                mess.pop();\n                dispatch(userChange(user, mess));\n            } else {\n                dispatch(userChange(user, []))\n            }\n\n            dispatch(getStar(user.uid));\n            dispatch(startListening(user.uid));\n        })\n    }\n}\n\nexport const startListening = (uid) => {\n    return (dispatch, getState, getFirebase) => {\n        const auth = getState().auth;\n        const firebase = getFirebase();\n\n        let url;\n        if (auth.uid > uid)\n            url = auth.uid + uid;\n        else\n            url = uid + auth.uid;\n\n        let messRef = firebase.database().ref(`messages/${url}`);\n\n        messRef.limitToLast(1).on('child_added', function (msgSnapshot) {\n            dispatch(messageChange(msgSnapshot.toJSON()))\n        })\n    }\n}\n\nexport const endListening = (uid) => {\n    return (dispatch, getState, getFirebase) => {\n        const auth = getState().auth;\n        const firebase = getFirebase();\n\n        let url;\n        if (auth.uid > uid)\n            url = auth.uid + uid;\n        else\n            url = uid + auth.uid;\n\n        firebase.database().ref(`messages/${url}`).off();\n    }\n}\n\nexport const getStar = (uid) => {\n    return (dispatch, getState, getFirebase) => {\n        const firebase = getFirebase();\n        const auth = getState().auth\n\n        return firebase.database().ref(`users/${auth.uid}/stat/${uid}/star`).once('value', (snapshot) => {\n            if (snapshot.val())\n                dispatch(changeStar(snapshot.val()))\n            else\n                dispatch(changeStar(false))\n        })\n    }\n}","import React from 'react';\nimport Message from './Message'\nimport { connect } from 'react-redux';\nimport { changeStar, sendMessage, startListening } from '../actions/messages'\nimport { onStarClick } from '../actions/users'\n\nexport class Messages extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            preImg: [],\n            inputImg: [],\n        };\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const message = e.target.message.value;\n\n        if (!message.trim() && this.state.inputImg === []) {\n            console.log(this.state.inputImg)\n            e.target.submit.diabled = true;\n            return;\n        }\n\n        this.props.sendMessage(this.props.user.uid, message, this.state.inputImg);\n        e.target.reset();\n        this.setState({\n            preImg: [],\n            inputImg: [],\n        })\n    }\n\n    handleChosen = (event) => {\n        if (event.target.files && event.target.files[0]) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                let preImgs = this.state.preImg.concat(e)\n                this.setState({ preImg: preImgs })\n            }\n            reader.readAsDataURL(event.target.files[0])\n\n            let tmp = this.state.inputImg.concat(event.target.files[0])\n            this.setState({ inputImg: tmp })\n            event.target.value = null;\n        }\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"auto\" });\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    handleStarClick = () => {\n        console.log(this.props.mess.star)\n\n        this.props.onStarClick(this.props.user.uid, !this.props.mess.star)\n        this.props.changeStar(!this.props.mess.star);\n    }\n\n    handleImageClick = (e) => {\n        let rm = e.target.getAttribute('data-key')\n        let tmpPre = this.state.preImg\n        tmpPre.splice(rm, 1)\n        let tmpIn = this.state.inputImg\n        tmpIn.splice(rm, 1)\n        this.setState({ inputImg: tmpIn, preImg: tmpPre })\n    }\n\n    render() {\n        let listMess = [];\n        this.props.mess.list.forEach(element => {\n            listMess.push(\n                <Message mess={element} auth={this.props.auth} user={this.props.user} />\n            )\n        });\n\n        let listimg = this.state.preImg.map((img, index) => {\n            return (\n                <img key={index} data-key={index} src={img.target.result} width=\"48\" height=\"48\"\n                    onClick={(e) => this.handleImageClick(e)} />\n            )\n        })\n\n        return (\n            <div className=\"content\">\n                <div className=\"contact-profile\">\n                    <img src={this.props.user ? this.props.user.avatarUrl : \"\"} alt=\"\" />\n                    <p>{this.props.user ? this.props.user.displayName : \"\"}</p>\n                    <div className={ this.props.mess.star ? \"social-media-star\" : \"social-media\"}>\n                        <i className=\"fa fa-star\" aria-hidden=\"true\" onClick={this.handleStarClick}></i>\n                    </div>\n                </div>\n\n                <div className=\"messages\">\n                    <ul>\n                        {listMess}\n                    </ul>\n\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n\n                <div className=\"message-input\">\n                    <div className=\"wrap\">\n                        <form onSubmit={this.onSubmit} autoComplete=\"off\">\n                            <input type=\"text\" name=\"message\" placeholder=\"Write your message...\" />\n                            <label htmlFor=\"file\">\n                                <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\n                            </label>\n                            <button name=\"submit\" className=\"submit\">\n                                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n                            </button>\n\n                            <input className=\"inputfile\" type=\"file\" id=\"file\" accept=\"image/*\" ref=\"fileUploader\" onChange={(e) =>\n                                this.handleChosen(e)} />\n                        </form>\n                    </div>\n                    <div>\n                        {listimg}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    user: state.messages.user,\n    mess: state.messages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    sendMessage: (uid, text, img) => dispatch(sendMessage(uid, text, img)),\n    startListening: (uid) => dispatch(startListening(uid)),\n    onStarClick: (uid, status) => dispatch(onStarClick(uid, status)),\n    changeStar: (star) => dispatch(changeStar(star)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","import React from 'react';\nimport Users from './Users'\nimport Messages from './Messages'\nimport { connect } from 'react-redux';\nimport { startOnline } from '../actions/auth'\nimport { startUserChange } from '../actions/messages'\n\nexport class Home extends React.Component {\n    componentWillMount() {\n        this.props.startOnline();\n    }\n\n    handleOnClick = (user) => {\n        this.props.startUserChange(user);\n    }\n\n    render() {\n        const auth = this.props.auth;\n        return (\n            <div id=\"frame\">\n                <div id=\"sidepanel\">\n                    <div id=\"profile\">\n                        <div className=\"wrap\">\n                            <img id=\"profile-img\" src={auth.avatarUrl} className=\"online\" alt=\"\" />\n                            <p>{auth.displayName}</p>\n                            <i className=\"fa fa-chevron-down expand-button\" aria-hidden=\"true\"></i>\n                            <div id=\"status-options\">\n                                <ul>\n                                    <li id=\"status-online\" className=\"active\"><span className=\"status-circle\"></span>\n                                        <p>Online</p>\n                                    </li>\n                                    <li id=\"status-away\"><span className=\"status-circle\"></span>\n                                        <p>Away</p>\n                                    </li>\n                                    <li id=\"status-busy\"><span className=\"status-circle\"></span>\n                                        <p>Busy</p>\n                                    </li>\n                                    <li id=\"status-offline\"><span className=\"status-circle\"></span>\n                                        <p>Offline</p>\n                                    </li>\n                                </ul>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <Users handleOnClick={this.handleOnClick} />\n                </div>\n\n                <Messages />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    user: state.messages.user\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    startUserChange: (uid) => dispatch(startUserChange(uid)),\n    startOnline: () => dispatch(startOnline()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../actions/auth';\n\nexport const Header = ({ startLogout }) => (\n  <header className=\"header\">\n    <div className=\"content-container\">\n      <div className=\"header__content\">\n        <Link className=\"header__title\" to=\"/join\">\n          <h1>Chat Group 545</h1>\n        </Link>\n        <button className=\"button button--link\" onClick={startLogout}>Logout</button>\n      </div>\n    </div>\n  </header>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogout: () => dispatch(startLogout())\n});\n\nexport default connect(undefined, mapDispatchToProps)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <div>\n          <Header />\n          <div>\n            <Component {...props} />\n          </div>\n        </div>\n      ) : (\n          <Redirect to=\"/\" />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <Redirect to=\"/home\" />\n      ) : (\n          <Component {...props} />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport NotFoundPage from '../components/NotFoundPage';\nimport LoginPage from '../components/LoginPage';\nimport Home from '../components/Home'\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const history = createHistory();\n\nconst AppRouter = () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n        <PrivateRoute path=\"/home\" component={Home} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        uid: action.uid,\n        displayName: action.name,\n        avatarUrl: action.photo\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","const defaultState = [];\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case 'USERS_LIST':\n            let tmp = [];\n            if (action.users)\n                tmp = action.users;\n            return tmp;\n        default:\n            return state;\n    }\n}","import { stat } from \"fs\";\n\nconst defaultState = {\n    star: false,\n    user: {\n        uid: null,\n        displayName: \"Chat With Ghost\",\n        avatarUrl: \"http://icons.iconarchive.com/icons/google/noto-emoji-smileys/512/10100-ghost-icon.png\",\n    },\n    list: [],\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case 'MESSAGES_CHANGE':\n            return {\n                star: state.star,\n                user: state.user,\n                list: [...state.list, action.mess]\n            }\n\n        case 'USER_CHANGE':\n            if (action.list)\n                return ({\n                    star: state.star,\n                    user: action.user,\n                    list: action.list,\n                })\n            else\n                return {\n                    star: state.star,\n                    user: action.user,\n                    list: []\n                }\n\n        case 'STAR_CHANGE':\n            return ({\n                star: action.star,\n                user: state.user,\n                list: state.list,\n            })\n\n        default:\n            return state;\n    }\n}","import { compose, combineReducers, applyMiddleware, createStore } from 'redux'\nimport { reactReduxFirebase, getFirebase, firebaseReducer } from 'react-redux-firebase'\nimport firebase from 'firebase'\nimport thunk from 'redux-thunk';\nimport authReducer from '../reducers/auth';\nimport usersReducer from '../reducers/users'\nimport messagesReducer from '../reducers/messages'\n\nvar config = {\n  apiKey: \"AIzaSyA9bkol6af0Wz-ozhS78n2TOs3LNya8xGg\",\n  authDomain: \"chat-group-18857.firebaseapp.com\",\n  databaseURL: \"https://chat-group-18857.firebaseio.com\",\n  projectId: \"chat-group-18857\",\n  storageBucket: \"chat-group-18857.appspot.com\",\n  messagingSenderId: \"660645655047\"\n};\n\nconst configDB = {\n  userProfile: 'users', // firebase root where user profiles are stored\n  firebaseStateName: 'firebase' // should match the reducer name ('firebase' is default)\n}\n\nexport function configureStore(initialState = {}) {\n  firebase.initializeApp(config)\n\n  const createStoreWithFirebase =\n    compose(reactReduxFirebase(firebase, configDB),\n      applyMiddleware(thunk.withExtraArgument(getFirebase))\n    )(createStore)\n\n  const store = createStoreWithFirebase(\n    combineReducers({\n      firebase: firebaseReducer,\n      auth: authReducer,\n      users: usersReducer,\n      messages: messagesReducer,\n    })\n  )\n\n  return store;\n}\n\nexport { firebase, configureStore as default };","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport AppRouter, { history } from './routers/AppRouter';\nimport { login, logout } from './actions/auth';\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { firebase, configureStore } from './firebase/firebase';\n\n\nconst initialState = window.__INITIAL_STATE__ // set initial state here\nconst store = configureStore(initialState);\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    const name = user.displayName ? user.displayName : user.email;\n    store.dispatch(login(user.uid, name, user.photoURL));\n    if (history.location.pathname === '/') {\n      history.push('/home');\n    }\n  } else {\n    store.dispatch(logout());\n    history.push('/');\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}